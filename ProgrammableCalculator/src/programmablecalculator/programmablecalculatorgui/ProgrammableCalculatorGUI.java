/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programmablecalculator.programmablecalculatorgui;

/**
 *
 * @author bad-b
 */
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import static javax.swing.JOptionPane.showMessageDialog;
import programmablecalculator.programmablecalculatorcontroller.ProgrammableCalculatorController;
import java.text.NumberFormat;
import java.util.Iterator;
import java.util.Locale;
import javax.swing.DefaultListModel;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexFormat;
public class ProgrammableCalculatorGUI extends javax.swing.JFrame {
    private DefaultListModel<String> visibleStackModel;
    public ProgrammableCalculatorController controller;
    private final String incompatibleInput;
    private final String bothParts;
    private final String onlyRealPart;
    private final String onlyImmaginaryPart;
    /**
     * Creates new form ProgrammableCalculatorGUI
     */
    public ProgrammableCalculatorGUI() {
        visibleStackModel=new DefaultListModel<>();
        initComponents();
        visibleStack.setModel(visibleStackModel);
        controller= new ProgrammableCalculatorController();
        incompatibleInput="(^[a-z0-9]+\\.?[a-z 0-9]+)([a-z0-9]?\\.?[^i]+)$";
        bothParts="(^[-]?[0-9]+\\.?[0-9]*)([-|+]+[0-9]*\\.?[0-9]*)[i$]+";
        onlyRealPart="([-]?[0-9]+\\.?[0-9]*)$";
        onlyImmaginaryPart="([-]?[0-9]*\\.?[0-9]*)[i$]+";
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CalculatorPanel = new javax.swing.JPanel();
        InputField = new javax.swing.JTextField();
        ProcessInputButton = new javax.swing.JButton();
        jButtonPlus = new javax.swing.JButton();
        jButtonMinus = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButtonDivision = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonDrop = new javax.swing.JButton();
        jButtonDup = new javax.swing.JButton();
        jButtonSwap = new javax.swing.JButton();
        jButtonSquareRoot = new javax.swing.JButton();
        jButtonInvertSign = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visibleStack = new javax.swing.JList<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ProgrammableCalculator");

        CalculatorPanel.setBackground(new java.awt.Color(51, 51, 255));
        CalculatorPanel.setToolTipText("");
        CalculatorPanel.setName("ProgrammableCalculator"); // NOI18N
        CalculatorPanel.setPreferredSize(new java.awt.Dimension(500, 500));

        InputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFieldActionPerformed(evt);
            }
        });

        ProcessInputButton.setBackground(new java.awt.Color(51, 51, 240));
        ProcessInputButton.setForeground(new java.awt.Color(255, 255, 255));
        ProcessInputButton.setText("Insert");
        ProcessInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessInputButtonActionPerformed(evt);
            }
        });
        ProcessInputButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ProcessInputButtonKeyPressed(evt);
            }
        });

        jButtonPlus.setBackground(new java.awt.Color(51, 51, 255));
        jButtonPlus.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPlus.setText("+");
        jButtonPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusActionPerformed(evt);
            }
        });

        jButtonMinus.setBackground(new java.awt.Color(51, 51, 240));
        jButtonMinus.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMinus.setText("-");
        jButtonMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMinusActionPerformed(evt);
            }
        });

        jButtonMultiply.setBackground(new java.awt.Color(51, 51, 240));
        jButtonMultiply.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMultiply.setText("*");
        jButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplyActionPerformed(evt);
            }
        });

        jButtonDivision.setBackground(new java.awt.Color(51, 51, 240));
        jButtonDivision.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDivision.setText("/");
        jButtonDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivisionActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(51, 51, 240));
        jButtonClear.setForeground(new java.awt.Color(255, 255, 255));
        jButtonClear.setText("CLEAR");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonDrop.setBackground(new java.awt.Color(51, 51, 240));
        jButtonDrop.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDrop.setText("DROP");
        jButtonDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDropActionPerformed(evt);
            }
        });

        jButtonDup.setBackground(new java.awt.Color(51, 51, 240));
        jButtonDup.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDup.setText("DUP");
        jButtonDup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDupActionPerformed(evt);
            }
        });

        jButtonSwap.setBackground(new java.awt.Color(51, 51, 240));
        jButtonSwap.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSwap.setText("SWAP");
        jButtonSwap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSwapActionPerformed(evt);
            }
        });

        jButtonSquareRoot.setBackground(new java.awt.Color(51, 51, 240));
        jButtonSquareRoot.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSquareRoot.setText("sqrt");
        jButtonSquareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSquareRootActionPerformed(evt);
            }
        });

        jButtonInvertSign.setBackground(new java.awt.Color(51, 51, 240));
        jButtonInvertSign.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInvertSign.setText("+/-");
        jButtonInvertSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvertSignActionPerformed(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Stack Operations");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Calculator's stack");

        jLabel3.setBackground(new java.awt.Color(51, 51, 240));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Number Operations");

        javax.swing.GroupLayout CalculatorPanelLayout = new javax.swing.GroupLayout(CalculatorPanel);
        CalculatorPanel.setLayout(CalculatorPanelLayout);
        CalculatorPanelLayout.setHorizontalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addComponent(jButtonSquareRoot, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 712, Short.MAX_VALUE))
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CalculatorPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(284, 284, 284)
                        .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jButtonSwap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonClear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25)
                                .addComponent(jButtonDrop)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonDup)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CalculatorPanelLayout.createSequentialGroup()
                        .addComponent(jButtonPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonInvertSign, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                                .addComponent(jButtonMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(jButtonDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(InputField, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ProcessInputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );
        CalculatorPanelLayout.setVerticalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProcessInputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(5, 5, 5)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPlus)
                    .addComponent(jButtonMinus)
                    .addComponent(jButtonMultiply)
                    .addComponent(jButtonDivision)
                    .addComponent(jButtonClear)
                    .addComponent(jButtonDrop)
                    .addComponent(jButtonDup))
                .addGap(18, 18, 18)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSquareRoot)
                    .addComponent(jButtonInvertSign)
                    .addComponent(jButtonSwap))
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(visibleStack);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CalculatorPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(CalculatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivisionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDivisionActionPerformed

    private void jButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonMultiplyActionPerformed

    private void ProcessInputButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProcessInputButtonKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProcessInputButtonKeyPressed

    private void ProcessInputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessInputButtonActionPerformed
        String message="";
        String input;
        input=this.checkInputField();
        if (input!=null){
            message=controller.elaborateInput(input);
            if(message!=null)
            showMessageDialog(null,message);
        }
        else
        InputField.setText("");
        update();
    }//GEN-LAST:event_ProcessInputButtonActionPerformed

    private void InputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFieldActionPerformed

    }//GEN-LAST:event_InputFieldActionPerformed

    private void jButtonSwapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSwapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSwapActionPerformed

    private void jButtonPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPlusActionPerformed

    private void jButtonMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMinusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonMinusActionPerformed

    private void jButtonSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSquareRootActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSquareRootActionPerformed

    private void jButtonInvertSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvertSignActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonInvertSignActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDropActionPerformed

    private void jButtonDupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonDupActionPerformed
    public String checkInputField(){
     String input;
     String numberWithNoSpace=InputField.getText().replaceAll("\\s","");
     String inputText=InputField.getText().toLowerCase();
     if(inputText.matches("[+{1}]") || inputText.matches("[-{1}]") || inputText.matches("[*{1}]") || inputText.matches("[/{1}]")) //check for an input that represents an operation
         return inputText;
    
     else{
         input=checkNumberProcess(inputText);
         return input;
     }
    }    
    
    public void setTextField(String text){
            InputField.setText(text);
    }
     
    
    private void update(){
        ComplexFormat format;
        NumberFormat nf= NumberFormat.getInstance(new Locale("en","US"));
        format=new ComplexFormat(nf);
        visibleStackModel.clear();
        Iterator<Complex> stack = controller.getNumbersStack();
        int i = 0;
        while(stack.hasNext() && i<12) {
            visibleStackModel.addElement(format.format(stack.next()));
            i+=1;
        }
    }
    private String checkNumberProcess(String inputText){
        Pattern inputCheck =Pattern.compile(incompatibleInput); //alphanumeric input sequence that is not accepted by the calculator
        Matcher inputMatcher=inputCheck.matcher(inputText);
        if(inputMatcher.find()){
            showMessageDialog(null,"Errore nel formato del numero o dell'operazione");
            return null;
        }
        inputCheck=Pattern.compile(bothParts); //input sequence of a complex number with both real and immaginary part
        inputMatcher=inputCheck.matcher(inputText);
        if(inputMatcher.find()) {
            if(inputText.contains("+i") || inputText.contains("-i")){
                return inputText.replaceAll("[i$]", "1.0i"); //modify the input in order to get the right format
            }else{
                return inputText;
            } 
        }
        inputCheck=Pattern.compile(onlyRealPart); //input sequence of a complex number with only real part
        inputMatcher=inputCheck.matcher(inputText);
        if(inputMatcher.find())
            return inputText;
        inputCheck=Pattern.compile(onlyImmaginaryPart); // input sequence of a complex number with only immaginary part
        inputMatcher=inputCheck.matcher(inputText);
        if (inputMatcher.find())
            if(inputText.contains("+i") || inputText.contains("-i"))
                return inputText.replaceAll("[i$]","1.0i");
            else{
                if(inputText.startsWith("-"))
                   return "0.0 "+inputText; // modify the string input based on his sign in order to get the right format
                else
                   return "0.0 + "+ inputText;
         }
        else{
            showMessageDialog(null,"Errore nel formato del numero o dell'operazione");
            return null;
        } 
    
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgrammableCalculatorGUI().setVisible(true);
            }
        });
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CalculatorPanel;
    private javax.swing.JTextField InputField;
    private javax.swing.JButton ProcessInputButton;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDivision;
    private javax.swing.JButton jButtonDrop;
    private javax.swing.JButton jButtonDup;
    private javax.swing.JButton jButtonInvertSign;
    private javax.swing.JButton jButtonMinus;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonPlus;
    private javax.swing.JButton jButtonSquareRoot;
    private javax.swing.JButton jButtonSwap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> visibleStack;
    // End of variables declaration//GEN-END:variables
}
