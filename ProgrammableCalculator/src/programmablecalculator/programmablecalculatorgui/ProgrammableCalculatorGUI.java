/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programmablecalculator.programmablecalculatorgui;

/**
 *
 * @author bad-b
 */
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import static javax.swing.JOptionPane.showMessageDialog;
import ProgrammableCalculatorController.ProgrammableCalculatorController;
import java.text.NumberFormat;
import java.util.Iterator;
import java.util.Locale;
import javax.swing.DefaultListModel;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexFormat;
public class ProgrammableCalculatorGUI extends javax.swing.JFrame {
    private DefaultListModel visibleStackModel;
    public ProgrammableCalculatorController controller;
    /**
     * Creates new form ProgrammableCalculatorGUI
     */
    public ProgrammableCalculatorGUI() {
        visibleStackModel=new DefaultListModel<>();
        initComponents();
        visibleStack.setModel(visibleStackModel);
        controller= new ProgrammableCalculatorController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CalculatorPanel = new javax.swing.JPanel();
        InputField = new javax.swing.JTextField();
        LabelTextField = new javax.swing.JLabel();
        ProcessInputButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        visibleStack = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ProgrammableCalculator");

        InputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputFieldActionPerformed(evt);
            }
        });

        LabelTextField.setText("Inserisci numeri e/o operazioni da eseguire");

        ProcessInputButton.setText("Insert");
        ProcessInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessInputButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(visibleStack);

        javax.swing.GroupLayout CalculatorPanelLayout = new javax.swing.GroupLayout(CalculatorPanel);
        CalculatorPanel.setLayout(CalculatorPanelLayout);
        CalculatorPanelLayout.setHorizontalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addComponent(LabelTextField)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(InputField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(ProcessInputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        CalculatorPanelLayout.setVerticalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(LabelTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InputField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProcessInputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(CalculatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CalculatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 287, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProcessInputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessInputButtonActionPerformed
     String input;
     input=this.checkInputField();
     System.out.println(input);
     if (input!=null)
         controller.elaborateInput(input);
     else
         InputField.setText("");
     update();
         
     
    }//GEN-LAST:event_ProcessInputButtonActionPerformed

    private void InputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFieldActionPerformed

    }//GEN-LAST:event_InputFieldActionPerformed
    public String checkInputField(){
     String numberWithNoSpace=InputField.getText().replaceAll("\\s","");
     String inputText=InputField.getText().toLowerCase();
     Pattern incompatibleInput=Pattern.compile("(^[a-z0-9]+\\.?[a-z 0-9]+)([a-z0-9]?\\.?[^i]+)$");
     Pattern patternBothParts= Pattern.compile("(^[-]?[0-9]+\\.?[0-9]*)([-|+]+[0-9]*\\.?[0-9]*)[i$]+");
     Pattern patternRealNumber= Pattern.compile("([-]?[0-9]+\\.?[0-9]*)$");
     Pattern patternOnlyImmaginaryPart= Pattern.compile("([-]?[0-9]*\\.?[0-9]*)[i$]+");
     Matcher matcherBothParts = patternBothParts.matcher(inputText);
     Matcher matcherRealNumber = patternRealNumber.matcher(inputText);
     Matcher matcherOnlyImmaginaryPart = patternOnlyImmaginaryPart.matcher(inputText);
     Matcher matcherIncompatibleInput=incompatibleInput.matcher(inputText);
     if(matcherIncompatibleInput.find()){
         showMessageDialog(null,"Errore nel formato del numero o dell'operazione");
         return null;
     }
     else if(matcherBothParts.find() || matcherRealNumber.find() ){
         if(inputText.contains("+i") || inputText.contains("-i")){
             return inputText.replaceAll("[i$]", "1.0i");
         }else{
             return inputText;
             
        }
             
     }
     else if (matcherOnlyImmaginaryPart.find())
         if(inputText.contains("+i") || inputText.contains("-i"))
             return inputText.replaceAll("[i$]","1.0i");
         else{
             if(inputText.startsWith("-"))
                 return "0.0 "+inputText;
             else
                 return "0.0 + "+ inputText;
         }
          
     
     else if(inputText.matches("[+{1}]") || inputText.matches("[-{1}]"))
         return inputText;
    
     else{
         showMessageDialog(null,"Errore nel formato del numero o dell'operazione");
         return null;
     }
        
    }    
    public void setTextField(String text){
            InputField.setText(text);
    }
     
    
    private void update(){
        ComplexFormat format;
        NumberFormat nf= NumberFormat.getInstance(new Locale("en","US"));
        format=new ComplexFormat(nf);
        visibleStackModel.clear();
        Iterator<Complex> stack = controller.getNumbersStack();
        int i = 0;
        while(stack.hasNext() && i<12) {
            visibleStackModel.addElement(format.format(stack.next()));
            i+=1;
        }
    }

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new ProgrammableCalculatorGUI().setVisible(true);
                
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CalculatorPanel;
    private javax.swing.JTextField InputField;
    private javax.swing.JLabel LabelTextField;
    private javax.swing.JButton ProcessInputButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> visibleStack;
    // End of variables declaration//GEN-END:variables
}
