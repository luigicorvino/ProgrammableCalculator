/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package programmablecalculator.programmablecalculatorgui;

/**
 *
 * @author bad-b
 */
import java.awt.event.KeyEvent;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import static javax.swing.JOptionPane.showMessageDialog;
import programmablecalculator.programmablecalculatorcontroller.ProgrammableCalculatorController;
import java.text.NumberFormat;
import java.util.Iterator;
import java.util.Locale;
import javax.swing.DefaultListModel;
import org.apache.commons.math3.complex.Complex;
import org.apache.commons.math3.complex.ComplexFormat;
public class ProgrammableCalculatorGUI extends javax.swing.JFrame {
    private DefaultListModel<String> visibleStackModel;
    private DefaultListModel<String> userDefinedOperationModel;
    private DefaultListModel<String> currentVariableModel;
    public ProgrammableCalculatorController controller;
    private final String bothParts;
    private final String onlyRealPart;
    private final String onlyImmaginaryPart;
    /**
     * Creates new form ProgrammableCalculatorGUI
     */
    
    
    public ProgrammableCalculatorGUI() {
        visibleStackModel=new DefaultListModel<>();
        currentVariableModel=new DefaultListModel<>();
        userDefinedOperationModel= new DefaultListModel<>();
        initComponents();
        jFrameChoice.setVisible(false);
        visibleStack.setModel(visibleStackModel);
        jListVariables.setModel(currentVariableModel);
        userDefinedOperationVisualizer.setModel(userDefinedOperationModel);
        controller= new ProgrammableCalculatorController();
        bothParts="(^[-]?\\d+\\.?\\d*)([-|+]+\\d*\\.?\\d*)[i$]+";
        onlyRealPart="^[-]?\\d+\\.?\\d*$";
        onlyImmaginaryPart="^[-]?\\d*\\.?\\d*[i{1}$]+";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrameChoice = new javax.swing.JFrame();
        jPanelInputChoice = new javax.swing.JPanel();
        jButtonPerformChoice = new javax.swing.JButton();
        jCheckBoxAddNumber = new javax.swing.JCheckBox();
        jCheckBoxSubtract = new javax.swing.JCheckBox();
        jLabelInputChoice = new javax.swing.JLabel();
        buttonGroupCheckBoxes = new javax.swing.ButtonGroup();
        jFrameUserDefinedOperation = new javax.swing.JFrame();
        jPanelUserDefinedOperation = new javax.swing.JPanel();
        jTextFieldOperationName = new javax.swing.JTextField();
        jLabelOperationName = new javax.swing.JLabel();
        jLabelOperationSequence = new javax.swing.JLabel();
        jTextFieldOperationSequence = new javax.swing.JTextField();
        jButtonAddOperation = new javax.swing.JButton();
        jButtonModifyOperation = new javax.swing.JButton();
        jButtonRemoveOperation = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        userDefinedOperationVisualizer = new javax.swing.JList<String>();
        jButtonInvokeOperation = new javax.swing.JButton();
        jTextFieldNewName = new javax.swing.JTextField();
        jLabelModfiyName = new javax.swing.JLabel();
        jFrameVariables = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListVariables = new javax.swing.JList<String>();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CalculatorPanel = new javax.swing.JPanel();
        inputField = new javax.swing.JTextField();
        processInputButton = new javax.swing.JButton();
        jButtonPlus = new javax.swing.JButton();
        jButtonMinus = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButtonDivision = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jButtonDrop = new javax.swing.JButton();
        jButtonDup = new javax.swing.JButton();
        jButtonSwap = new javax.swing.JButton();
        jButtonSquareRoot = new javax.swing.JButton();
        jButtonInvertSign = new javax.swing.JButton();
        jLabelStackOperations = new javax.swing.JLabel();
        jLabelVisibleStack = new javax.swing.JLabel();
        jLabelNumberOperations = new javax.swing.JLabel();
        jButtonOver = new javax.swing.JButton();
        jLabelUserDefinedOperations = new javax.swing.JLabel();
        jButtonShowOperationsFrame = new javax.swing.JButton();
        jLabelVariables = new javax.swing.JLabel();
        showCurrentVariablesValues = new javax.swing.JButton();
        pushOnStack = new javax.swing.JButton();
        pushOnTheVariable = new javax.swing.JButton();
        subtractFromVariableValue = new javax.swing.JButton();
        addToVariableValue = new javax.swing.JButton();
        jLabelCurrentValues = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visibleStack = new javax.swing.JList<String>();

        jFrameChoice.setTitle("InputChoice");
        jFrameChoice.setBounds(new java.awt.Rectangle(0, 0, 0, 0));

        jPanelInputChoice.setBackground(new java.awt.Color(51, 51, 240));
        jPanelInputChoice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanelInputChoice.setToolTipText("");
        jPanelInputChoice.setName("InputChoice"); // NOI18N

        jButtonPerformChoice.setBackground(new java.awt.Color(51, 51, 240));
        jButtonPerformChoice.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPerformChoice.setText("Perform");
        jButtonPerformChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPerformChoiceActionPerformed(evt);
            }
        });

        buttonGroupCheckBoxes.add(jCheckBoxAddNumber);
        jCheckBoxAddNumber.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxAddNumber.setText("Add the complex number -i to the stack");

        buttonGroupCheckBoxes.add(jCheckBoxSubtract);
        jCheckBoxSubtract.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBoxSubtract.setText("Subtract the last value of the stack from the variable i");

        jLabelInputChoice.setForeground(new java.awt.Color(255, 255, 255));
        jLabelInputChoice.setText("In order to avoid conflicts, choose the operation to perform:");

        javax.swing.GroupLayout jPanelInputChoiceLayout = new javax.swing.GroupLayout(jPanelInputChoice);
        jPanelInputChoice.setLayout(jPanelInputChoiceLayout);
        jPanelInputChoiceLayout.setHorizontalGroup(
            jPanelInputChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputChoiceLayout.createSequentialGroup()
                .addGroup(jPanelInputChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInputChoiceLayout.createSequentialGroup()
                        .addGap(169, 169, 169)
                        .addComponent(jButtonPerformChoice))
                    .addGroup(jPanelInputChoiceLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBoxSubtract))
                    .addGroup(jPanelInputChoiceLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCheckBoxAddNumber))
                    .addComponent(jLabelInputChoice))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanelInputChoiceLayout.setVerticalGroup(
            jPanelInputChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputChoiceLayout.createSequentialGroup()
                .addComponent(jLabelInputChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxAddNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jCheckBoxSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPerformChoice)
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrameChoiceLayout = new javax.swing.GroupLayout(jFrameChoice.getContentPane());
        jFrameChoice.getContentPane().setLayout(jFrameChoiceLayout);
        jFrameChoiceLayout.setHorizontalGroup(
            jFrameChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrameChoiceLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanelInputChoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrameChoiceLayout.setVerticalGroup(
            jFrameChoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelInputChoice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jFrameUserDefinedOperation.setTitle("User Defined Operations Editor");

        jPanelUserDefinedOperation.setBackground(new java.awt.Color(51, 51, 240));

        jLabelOperationName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelOperationName.setText("Inserisci il nome dell'operazione da creare/modificare/rimuovere");

        jLabelOperationSequence.setForeground(new java.awt.Color(255, 255, 255));
        jLabelOperationSequence.setText("Inserisci la sequenza di operazioni da assegnare");

        jButtonAddOperation.setBackground(new java.awt.Color(51, 51, 240));
        jButtonAddOperation.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddOperation.setText("Add");
        jButtonAddOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddOperationActionPerformed(evt);
            }
        });

        jButtonModifyOperation.setBackground(new java.awt.Color(51, 51, 240));
        jButtonModifyOperation.setForeground(new java.awt.Color(255, 255, 255));
        jButtonModifyOperation.setText("Modify");
        jButtonModifyOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifyOperationActionPerformed(evt);
            }
        });

        jButtonRemoveOperation.setBackground(new java.awt.Color(51, 51, 240));
        jButtonRemoveOperation.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRemoveOperation.setText("Remove");
        jButtonRemoveOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveOperationActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(userDefinedOperationVisualizer);

        jButtonInvokeOperation.setBackground(new java.awt.Color(51, 51, 240));
        jButtonInvokeOperation.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInvokeOperation.setText("Invoke");
        jButtonInvokeOperation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvokeOperationActionPerformed(evt);
            }
        });

        jLabelModfiyName.setBackground(new java.awt.Color(51, 51, 240));
        jLabelModfiyName.setForeground(new java.awt.Color(255, 255, 255));
        jLabelModfiyName.setText("Inserisci il nuovo nome dell'operazione da modificare");

        javax.swing.GroupLayout jPanelUserDefinedOperationLayout = new javax.swing.GroupLayout(jPanelUserDefinedOperation);
        jPanelUserDefinedOperation.setLayout(jPanelUserDefinedOperationLayout);
        jPanelUserDefinedOperationLayout.setHorizontalGroup(
            jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanelUserDefinedOperationLayout.createSequentialGroup()
                .addGroup(jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabelModfiyName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelOperationName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelOperationSequence, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldOperationSequence, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldOperationName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNewName, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addGroup(jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonModifyOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRemoveOperation, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                        .addComponent(jButtonInvokeOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButtonAddOperation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );
        jPanelUserDefinedOperationLayout.setVerticalGroup(
            jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUserDefinedOperationLayout.createSequentialGroup()
                .addComponent(jLabelOperationName)
                .addGap(5, 5, 5)
                .addGroup(jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelUserDefinedOperationLayout.createSequentialGroup()
                        .addGroup(jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldOperationName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonAddOperation))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelUserDefinedOperationLayout.createSequentialGroup()
                                .addComponent(jButtonInvokeOperation)
                                .addGap(38, 38, 38)
                                .addComponent(jButtonModifyOperation))
                            .addGroup(jPanelUserDefinedOperationLayout.createSequentialGroup()
                                .addComponent(jLabelOperationSequence)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldOperationSequence, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelModfiyName)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNewName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButtonRemoveOperation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jFrameUserDefinedOperationLayout = new javax.swing.GroupLayout(jFrameUserDefinedOperation.getContentPane());
        jFrameUserDefinedOperation.getContentPane().setLayout(jFrameUserDefinedOperationLayout);
        jFrameUserDefinedOperationLayout.setHorizontalGroup(
            jFrameUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelUserDefinedOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrameUserDefinedOperationLayout.setVerticalGroup(
            jFrameUserDefinedOperationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelUserDefinedOperation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jFrameVariables.setTitle("Variables");
        jFrameVariables.setAlwaysOnTop(true);
        jFrameVariables.setBackground(new java.awt.Color(51, 51, 240));

        jPanel1.setBackground(new java.awt.Color(51, 51, 240));

        jLabel1.setBackground(new java.awt.Color(51, 51, 240));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("The values will show when an update occurs");

        jListVariables.setBackground(new java.awt.Color(51, 51, 255));
        jListVariables.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(jListVariables);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jFrameVariablesLayout = new javax.swing.GroupLayout(jFrameVariables.getContentPane());
        jFrameVariables.getContentPane().setLayout(jFrameVariablesLayout);
        jFrameVariablesLayout.setHorizontalGroup(
            jFrameVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrameVariablesLayout.setVerticalGroup(
            jFrameVariablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrameVariablesLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ProgrammableCalculator");

        CalculatorPanel.setBackground(new java.awt.Color(51, 51, 255));
        CalculatorPanel.setToolTipText("");
        CalculatorPanel.setName("ProgrammableCalculator"); // NOI18N
        CalculatorPanel.setPreferredSize(new java.awt.Dimension(500, 500));

        inputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputFieldKeyPressed(evt);
            }
        });

        processInputButton.setBackground(new java.awt.Color(51, 51, 240));
        processInputButton.setForeground(new java.awt.Color(255, 255, 255));
        processInputButton.setText("Insert");
        processInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processInputButtonActionPerformed(evt);
            }
        });

        jButtonPlus.setBackground(new java.awt.Color(51, 51, 255));
        jButtonPlus.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPlus.setText("+");
        jButtonPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusActionPerformed(evt);
            }
        });

        jButtonMinus.setBackground(new java.awt.Color(51, 51, 240));
        jButtonMinus.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMinus.setText("-");
        jButtonMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMinusActionPerformed(evt);
            }
        });

        jButtonMultiply.setBackground(new java.awt.Color(51, 51, 240));
        jButtonMultiply.setForeground(new java.awt.Color(255, 255, 255));
        jButtonMultiply.setText("*");
        jButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplyActionPerformed(evt);
            }
        });

        jButtonDivision.setBackground(new java.awt.Color(51, 51, 240));
        jButtonDivision.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDivision.setText("/");
        jButtonDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivisionActionPerformed(evt);
            }
        });

        jButtonClear.setBackground(new java.awt.Color(51, 51, 240));
        jButtonClear.setForeground(new java.awt.Color(255, 255, 255));
        jButtonClear.setText("CLEAR");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonDrop.setBackground(new java.awt.Color(51, 51, 240));
        jButtonDrop.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDrop.setText("DROP");
        jButtonDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDropActionPerformed(evt);
            }
        });

        jButtonDup.setBackground(new java.awt.Color(51, 51, 240));
        jButtonDup.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDup.setText("DUP");
        jButtonDup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDupActionPerformed(evt);
            }
        });

        jButtonSwap.setBackground(new java.awt.Color(51, 51, 240));
        jButtonSwap.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSwap.setText("SWAP");
        jButtonSwap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSwapActionPerformed(evt);
            }
        });

        jButtonSquareRoot.setBackground(new java.awt.Color(51, 51, 240));
        jButtonSquareRoot.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSquareRoot.setText("sqrt");
        jButtonSquareRoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSquareRootActionPerformed(evt);
            }
        });

        jButtonInvertSign.setBackground(new java.awt.Color(51, 51, 240));
        jButtonInvertSign.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInvertSign.setText("+/-");
        jButtonInvertSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInvertSignActionPerformed(evt);
            }
        });

        jLabelStackOperations.setForeground(new java.awt.Color(255, 255, 255));
        jLabelStackOperations.setText("Stack Operations");

        jLabelVisibleStack.setForeground(new java.awt.Color(255, 255, 255));
        jLabelVisibleStack.setText("Calculator's stack");

        jLabelNumberOperations.setBackground(new java.awt.Color(51, 51, 240));
        jLabelNumberOperations.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNumberOperations.setText("Number Operations");

        jButtonOver.setBackground(new java.awt.Color(51, 51, 240));
        jButtonOver.setForeground(new java.awt.Color(255, 255, 255));
        jButtonOver.setText("OVER");
        jButtonOver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOverActionPerformed(evt);
            }
        });

        jLabelUserDefinedOperations.setForeground(new java.awt.Color(255, 255, 255));
        jLabelUserDefinedOperations.setText("User Defined Operations");

        jButtonShowOperationsFrame.setBackground(new java.awt.Color(51, 51, 240));
        jButtonShowOperationsFrame.setForeground(new java.awt.Color(255, 255, 255));
        jButtonShowOperationsFrame.setText(" User Defined Operations Editor");
        jButtonShowOperationsFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowOperationsFrameActionPerformed(evt);
            }
        });

        jLabelVariables.setForeground(new java.awt.Color(255, 255, 255));
        jLabelVariables.setText("Variables");

        showCurrentVariablesValues.setBackground(new java.awt.Color(51, 51, 240));
        showCurrentVariablesValues.setForeground(new java.awt.Color(255, 255, 255));
        showCurrentVariablesValues.setText("Show");
        showCurrentVariablesValues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCurrentVariablesValuesActionPerformed(evt);
            }
        });

        pushOnStack.setBackground(new java.awt.Color(51, 51, 240));
        pushOnStack.setForeground(new java.awt.Color(255, 255, 255));
        pushOnStack.setText(">");
        pushOnStack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushOnStackActionPerformed(evt);
            }
        });

        pushOnTheVariable.setBackground(new java.awt.Color(51, 51, 240));
        pushOnTheVariable.setForeground(new java.awt.Color(255, 255, 255));
        pushOnTheVariable.setText("<");
        pushOnTheVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pushOnTheVariableActionPerformed(evt);
            }
        });

        subtractFromVariableValue.setBackground(new java.awt.Color(51, 51, 240));
        subtractFromVariableValue.setForeground(new java.awt.Color(255, 255, 255));
        subtractFromVariableValue.setText("-");
        subtractFromVariableValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subtractFromVariableValueActionPerformed(evt);
            }
        });

        addToVariableValue.setBackground(new java.awt.Color(51, 51, 240));
        addToVariableValue.setForeground(new java.awt.Color(255, 255, 255));
        addToVariableValue.setText("+");
        addToVariableValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToVariableValueActionPerformed(evt);
            }
        });

        jLabelCurrentValues.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCurrentValues.setText("Current Values");

        javax.swing.GroupLayout CalculatorPanelLayout = new javax.swing.GroupLayout(CalculatorPanel);
        CalculatorPanel.setLayout(CalculatorPanelLayout);
        CalculatorPanelLayout.setHorizontalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelVisibleStack, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CalculatorPanelLayout.createSequentialGroup()
                        .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(processInputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CalculatorPanelLayout.createSequentialGroup()
                        .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNumberOperations)
                            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(CalculatorPanelLayout.createSequentialGroup()
                                        .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(addToVariableValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonPlus, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                                                .addComponent(jButtonSquareRoot, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                                            .addComponent(pushOnStack, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(subtractFromVariableValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonInvertSign, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButtonMinus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                                            .addComponent(pushOnTheVariable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jLabelVariables))
                                .addGap(28, 28, 28)
                                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(showCurrentVariablesValues, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabelCurrentValues, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jButtonDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(238, 238, 238)
                        .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelStackOperations)
                            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonClear)
                                    .addComponent(jButtonSwap, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonOver)
                                    .addGroup(CalculatorPanelLayout.createSequentialGroup()
                                        .addComponent(jButtonDrop)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonDup))))
                            .addComponent(jLabelUserDefinedOperations)
                            .addComponent(jButtonShowOperationsFrame))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        CalculatorPanelLayout.setVerticalGroup(
            CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CalculatorPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processInputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumberOperations)
                    .addComponent(jLabelStackOperations))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonClear)
                    .addComponent(jButtonDrop)
                    .addComponent(jButtonDup)
                    .addComponent(jButtonMultiply)
                    .addComponent(jButtonMinus)
                    .addComponent(jButtonPlus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonOver)
                    .addComponent(jButtonSwap)
                    .addComponent(jButtonSquareRoot)
                    .addComponent(jButtonInvertSign)
                    .addComponent(jButtonDivision))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelUserDefinedOperations)
                    .addComponent(jLabelVariables)
                    .addComponent(jLabelCurrentValues))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonShowOperationsFrame)
                    .addComponent(subtractFromVariableValue)
                    .addComponent(addToVariableValue)
                    .addComponent(showCurrentVariablesValues))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pushOnStack)
                    .addComponent(pushOnTheVariable))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jLabelVisibleStack)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(visibleStack);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CalculatorPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(CalculatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivisionActionPerformed
        checkOperationStatusAndUpdate("/");
    }//GEN-LAST:event_jButtonDivisionActionPerformed

    private void jButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplyActionPerformed
        checkOperationStatusAndUpdate("*");
    }//GEN-LAST:event_jButtonMultiplyActionPerformed

    private void ProcessInputButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProcessInputButtonKeyPressed

    }//GEN-LAST:event_ProcessInputButtonKeyPressed

    private void processInputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processInputButtonActionPerformed
        String message="";
        String input;
        input=this.checkInputField(inputField.getText());
        if (input!=null){
           if(input.equals("-i")){
               jFrameChoice.setVisible(true);
               jFrameChoice.setSize(426,240);
               return;
            }
        checkOperationStatusAndUpdate(input);
        }
        inputField.setText("");
       
    }//GEN-LAST:event_processInputButtonActionPerformed

    private void InputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputFieldActionPerformed

    }//GEN-LAST:event_InputFieldActionPerformed

    private void jButtonSwapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSwapActionPerformed
        checkOperationStatusAndUpdate("swap");
    }//GEN-LAST:event_jButtonSwapActionPerformed

    private void jButtonPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusActionPerformed
       checkOperationStatusAndUpdate("+");
    }//GEN-LAST:event_jButtonPlusActionPerformed

    private void jButtonMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMinusActionPerformed
       checkOperationStatusAndUpdate("-");
    }//GEN-LAST:event_jButtonMinusActionPerformed

    private void jButtonSquareRootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSquareRootActionPerformed
       checkOperationStatusAndUpdate("sqrt");
    }//GEN-LAST:event_jButtonSquareRootActionPerformed

    private void jButtonInvertSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvertSignActionPerformed
       checkOperationStatusAndUpdate("+-");
    }//GEN-LAST:event_jButtonInvertSignActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        checkOperationStatusAndUpdate("clear");
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDropActionPerformed
        checkOperationStatusAndUpdate("drop");
    }//GEN-LAST:event_jButtonDropActionPerformed

    private void jButtonDupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDupActionPerformed
        checkOperationStatusAndUpdate("dup");
    }//GEN-LAST:event_jButtonDupActionPerformed

    private void inputFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputFieldKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            String message="";
            String input;
            input=checkInputField(inputField.getText());
            if(input!=null){
                if(input.equals("-i")){
                jFrameChoice.setVisible(true);
                jFrameChoice.setSize(426,240);
                return;
            }
            checkOperationStatusAndUpdate(input);
        }
        inputField.setText("");
        }
        
    }//GEN-LAST:event_inputFieldKeyPressed

    private void jButtonOverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOverActionPerformed
       checkOperationStatusAndUpdate("over");
    }//GEN-LAST:event_jButtonOverActionPerformed

    private void jButtonPerformChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPerformChoiceActionPerformed
        String input;
        if(jCheckBoxAddNumber.isSelected()){
            input="-i".replace("i","1.0i");
            checkOperationStatusAndUpdate("0.0"+input);
        }
        if(jCheckBoxSubtract.isSelected()) {
           checkOperationStatusAndUpdate("-i");
        }
        inputField.setText("");
        jFrameChoice.dispose();
        
    }//GEN-LAST:event_jButtonPerformChoiceActionPerformed

    private void jButtonAddOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddOperationActionPerformed
        String name=jTextFieldOperationName.getText();
        String sequence=jTextFieldOperationSequence.getText();
        String message="";
        if(name.equals("") || sequence.equals("")){
            showMessageDialog(null,"Errore nell'inserimento del nome o della sequenza");
            jTextFieldOperationName.setText("");
            jTextFieldOperationSequence.setText("");
            return;
        }
        if(checkOperationSequence(sequence)){
            message=controller.createUserDefinedOperation(name,sequence);
            if(message!=null && (!(message.equals("")))){
                showMessageDialog(null,message);
                jTextFieldOperationName.setText("");
                jTextFieldOperationSequence.setText("");
        }
            else{
                showMessageDialog(null,"Operazione creata con successo");
                jTextFieldOperationName.setText("");
                jTextFieldOperationSequence.setText("");
                updateUserDefinedOperationsVisualizer(); //update the User Defined Operation list.
            }
        }    
    }//GEN-LAST:event_jButtonAddOperationActionPerformed

    private void jButtonRemoveOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveOperationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRemoveOperationActionPerformed

    private void jButtonShowOperationsFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowOperationsFrameActionPerformed
        jFrameUserDefinedOperation.setVisible(true);
        jFrameUserDefinedOperation.setSize(800,400);
    }//GEN-LAST:event_jButtonShowOperationsFrameActionPerformed

    private void jButtonModifyOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifyOperationActionPerformed
        String name=jTextFieldOperationName.getText();
        String newName=jTextFieldNewName.getText();
        String sequence=jTextFieldOperationSequence.getText();
        if(!(name.equals("")) || (!(newName.equals("")))){
            String message=controller.modifyNameUserDefinedOperation(name,newName);
            if(message!=null)
                showMessageDialog(null,message);
            jTextFieldOperationName.setText("");
            jTextFieldNewName.setText("");
            jTextFieldOperationSequence.setText("");
            return;
        }
        if(!(checkOperationSequence(sequence)))
            return;
        else if(!(name.equals(""))|| (!(sequence.equals("")))){
            String message=controller.modifySequenceUserDefinedOperation(name, sequence);
            if(message!=null)
                showMessageDialog(null,message);
            jTextFieldOperationName.setText("");
            jTextFieldNewName.setText("");
            jTextFieldOperationSequence.setText("");
        }
        else{
            showMessageDialog(null,"Errore nell'operazione di modifica");
            jTextFieldOperationName.setText("");
            jTextFieldNewName.setText("");
            jTextFieldOperationSequence.setText("");
        }            
    }//GEN-LAST:event_jButtonModifyOperationActionPerformed

    private void addToVariableValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToVariableValueActionPerformed
       inputField.setText("+");
    }//GEN-LAST:event_addToVariableValueActionPerformed

    private void subtractFromVariableValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subtractFromVariableValueActionPerformed
       inputField.setText("-");
    }//GEN-LAST:event_subtractFromVariableValueActionPerformed

    private void pushOnStackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushOnStackActionPerformed
       inputField.setText(">");
    }//GEN-LAST:event_pushOnStackActionPerformed

    private void pushOnTheVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pushOnTheVariableActionPerformed
       inputField.setText("<");
    }//GEN-LAST:event_pushOnTheVariableActionPerformed

    private void showCurrentVariablesValuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCurrentVariablesValuesActionPerformed
       jFrameVariables.setVisible(true);
       jFrameVariables.setSize(270,500);
    }//GEN-LAST:event_showCurrentVariablesValuesActionPerformed

    private void jButtonInvokeOperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInvokeOperationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonInvokeOperationActionPerformed
    protected String checkInputField(String text){
     String input;
     String numberWithNoSpace=text.replaceAll("\\s","");
     String inputText=numberWithNoSpace.toLowerCase();
     if(inputText.equals("+") || inputText.equals("-") || inputText.equals("*") || inputText.equals("/") || inputText.equals("sqrt") || inputText.equals("+-")
        || inputText.equals("clear") || inputText.equals("drop") || inputText.equals("dup") || inputText.equals("over") 
        || inputText.equals("swap") || inputText.equals("save") || inputText.equals("restore"))   //check for an input that represents an operation
        return inputText;
     else if(checkVariableOperations(inputText)!=null){
        return inputText;
     }
     else{
        input=checkNumberProcess(inputText);
        return input;
     }
    }    
    
    public void setTextField(String text){
        inputField.setText(text);
    }
    public DefaultListModel getModel(){
        return visibleStackModel;
    }
    
    protected void updateVisibleStack(){
        ComplexFormat format;
        NumberFormat nf= NumberFormat.getInstance(new Locale("en","US"));
        format=new ComplexFormat(nf);
        nf.setMaximumFractionDigits(8);
        visibleStackModel.clear();
        Iterator<Complex> stack = controller.getNumbersStack();
        int i = 0;
        while(stack.hasNext() && i<12) {
            visibleStackModel.addElement(format.format(stack.next()));
            i+=1;
        }
    }
    protected void updateVariablesValues(){
        String arrayVariable="abcdefghijklmnopqrstuvz";
        ComplexFormat format;
        NumberFormat nf= NumberFormat.getInstance(new Locale("en","US"));
        format=new ComplexFormat(nf);
        nf.setMaximumFractionDigits(8);
        currentVariableModel.clear();
        Complex[] variableArray = controller.getVariableArray();
        for(int i=0;i<variableArray.length;i++){
            if(variableArray[i]!=null)
                currentVariableModel.addElement(arrayVariable.charAt(i)+"\t"+variableArray[i]+"\n");
        }
    }
    protected void updateUserDefinedOperationsVisualizer(){
        userDefinedOperationModel.clear();
        userDefinedOperationModel.addElement("Operation's name"+"                  "
                + "Operation's sequence\n");
    }
    private String checkNumberProcess(String inputText){
        Pattern inputCheck=Pattern.compile(bothParts); //input sequence of a complex number with both real and immaginary part
        Matcher inputMatcher=inputCheck.matcher(inputText);
        if(inputMatcher.find()) {
                 if(inputText.contains("+i") || inputText.contains("-i")){
                     return inputText.replaceAll("[i$]", "1.0i"); //modify the input in order to get the right format
                 }else{
                     return inputText;
                 }   
            
        }    
        inputCheck=Pattern.compile(onlyRealPart); //input sequence of a complex number with only real part
        inputMatcher=inputCheck.matcher(inputText);
        if(inputMatcher.find())
            return inputText;
        
        inputCheck=Pattern.compile(onlyImmaginaryPart); // input sequence of a complex number with only immaginary part
        inputMatcher=inputCheck.matcher(inputText);
        if (inputMatcher.find()){
            if(inputText.equals("i")){
                String input=inputText.replace("i","1.0i");
                return "0.0+" + input;
            }
            
            else if( inputText.contains("+i") || inputText.contains("-i")){
                return inputText.replace("i","1.0i");
            
            }
            else
                if(inputText.startsWith("-"))
                    return "0.0"+inputText;
                else
                    return "0.0+"+inputText;
            
        }    
        else{
            showMessageDialog(null,"Errore nel formato del numero o dell'operazione");
            return null;
        } 
    
    }
    protected String checkVariableOperations(String inputText){
        if(inputText.matches("^\\>{1}[a-z]{1}$")|| inputText.matches("^\\<{1}[a-z]{1}$")|| inputText.matches("^\\+{1}[a-z]{1}$") 
           || inputText.matches("^\\-{1}[a-z]{1}$")) //check for a variable operation that is +/-/</> followed by an alphabet letter.
            return inputText;
        else
            return null;
    }
    protected void checkOperationStatusAndUpdate(String input){
        String message=controller.elaborateInput(input);
        if(message!=null) //check the status of the operation 
            showMessageDialog(null,message);
        else{
            updateVisibleStack(); //updates the values of jList VisibleStack.
            updateVariablesValues();//updates the values of jList VariablesValues.
            
        }
    }
    private boolean checkOperationSequence(String sequence){
        String[] operationList=sequence.split("\\s+");
        String result=null;
        for(String line: operationList){
            result=checkInputField(line);
            if(result==null)
                return false;
        }
        return true;
        
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgrammableCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgrammableCalculatorGUI().setVisible(true);
                
            }
        });
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CalculatorPanel;
    private javax.swing.JButton addToVariableValue;
    private javax.swing.ButtonGroup buttonGroupCheckBoxes;
    private javax.swing.JTextField inputField;
    private javax.swing.JButton jButtonAddOperation;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDivision;
    private javax.swing.JButton jButtonDrop;
    private javax.swing.JButton jButtonDup;
    private javax.swing.JButton jButtonInvertSign;
    private javax.swing.JButton jButtonInvokeOperation;
    private javax.swing.JButton jButtonMinus;
    private javax.swing.JButton jButtonModifyOperation;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonOver;
    private javax.swing.JButton jButtonPerformChoice;
    private javax.swing.JButton jButtonPlus;
    private javax.swing.JButton jButtonRemoveOperation;
    private javax.swing.JButton jButtonShowOperationsFrame;
    private javax.swing.JButton jButtonSquareRoot;
    private javax.swing.JButton jButtonSwap;
    private javax.swing.JCheckBox jCheckBoxAddNumber;
    private javax.swing.JCheckBox jCheckBoxSubtract;
    private javax.swing.JFrame jFrameChoice;
    private javax.swing.JFrame jFrameUserDefinedOperation;
    private javax.swing.JFrame jFrameVariables;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelCurrentValues;
    private javax.swing.JLabel jLabelInputChoice;
    private javax.swing.JLabel jLabelModfiyName;
    private javax.swing.JLabel jLabelNumberOperations;
    private javax.swing.JLabel jLabelOperationName;
    private javax.swing.JLabel jLabelOperationSequence;
    private javax.swing.JLabel jLabelStackOperations;
    private javax.swing.JLabel jLabelUserDefinedOperations;
    private javax.swing.JLabel jLabelVariables;
    private javax.swing.JLabel jLabelVisibleStack;
    private javax.swing.JList<String> jListVariables;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelInputChoice;
    private javax.swing.JPanel jPanelUserDefinedOperation;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldNewName;
    private javax.swing.JTextField jTextFieldOperationName;
    private javax.swing.JTextField jTextFieldOperationSequence;
    private javax.swing.JButton processInputButton;
    private javax.swing.JButton pushOnStack;
    private javax.swing.JButton pushOnTheVariable;
    private javax.swing.JButton showCurrentVariablesValues;
    private javax.swing.JButton subtractFromVariableValue;
    private javax.swing.JList<String> userDefinedOperationVisualizer;
    private javax.swing.JList<String> visibleStack;
    // End of variables declaration//GEN-END:variables
}
